import telebot
from telebot import types
from telebot.types import Message, CallbackQuery

from config import TOKEN
from qiwi import Bill


print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")


bot = telebot.TeleBot(TOKEN)
user = Bill()
game = {}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏.
with open("accounts/gta_accounts.txt", "r", encoding="UTF-8") as accounts:
    gta_accounts = [i for i in accounts]
with open("accounts/rust_accounts.txt", "r", encoding="UTF-8") as accounts:
    rust_accounts = [i for i in accounts]
with open("accounts/battlefield_accounts.txt", "r", encoding="UTF-8") as accounts:
    battlefield_accounts = [i for i in accounts]
with open("accounts/dota_accounts.txt", "r", encoding="UTF-8") as accounts:
    dota_accounts = [i for i in accounts]
with open("accounts/cod_accounts.txt", "r", encoding="UTF-8") as accounts:
    cod_accounts = [i for i in accounts]
with open("accounts/fortnite_accounts.txt", "r", encoding="UTF-8") as accounts:
    fortnite_accounts = [i for i in accounts]


def give_out(chat_id: int, game: dict) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –∏—Å–ø–æ–ª—å–∑—É—é—â–∞—è—Å—è –¥–ª—è –≤—ã–¥–∞—á–∏ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    :param chat_id: int (–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞)
    :param game: dict (–°–ª–æ–≤–∞—Ä—å, –∫–ª—é—á–æ–º –∫–æ—Ç–æ—Ä–æ–≥–æ —è–≤–ª—è–µ—Ç—Å—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º - —Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω –≤—ã–±—Ä–∞–ª)
    :return: None
    """
    if game == "gta":
        account = f"–í–∞—à –∞–∫–∫–∞—É–Ω—Ç: {gta_accounts[0]}"
        gta_accounts.pop(0)
    elif game == "rust":
        account = f"–í–∞—à –∞–∫–∫–∞—É–Ω—Ç: {rust_accounts[0]}"
        rust_accounts.pop(0)
    elif game == "dota":
        account = f"–í–∞—à –∞–∫–∫–∞—É–Ω—Ç: {dota_accounts[0]}"
        dota_accounts.pop(0)
    elif game == "fortnite":
        account = f"–í–∞—à –∞–∫–∫–∞—É–Ω—Ç: {fortnite_accounts[0]}"
        fortnite_accounts.pop(0)
    elif game == "cod":
        account = f"–í–∞—à –∞–∫–∫–∞—É–Ω—Ç: {cod_accounts[0]}"
        cod_accounts.pop(0)
    elif game == "battlefield":
        account = f"–í–∞—à –∞–∫–∫–∞—É–Ω—Ç: {battlefield_accounts[0]}"
        battlefield_accounts.pop(0)
    else:
        account = (
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ—Ç. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –º—ã –≤—ã–¥–∞–¥–∏–º –í–∞–º –∑–∞–º–µ–Ω—É."
        )
    bot.send_message(chat_id, account)


def navigation_keyboard() -> types.ReplyKeyboardMarkup:
    """
    –§—É–Ω–∫—Ü–∏—è —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –º–µ–Ω—é.
    :return: types.ReplyKeyboardMarkup
    """
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_catalog = types.KeyboardButton("/–ö–∞—Ç–∞–ª–æ–≥üõí")
    button_support = types.KeyboardButton("/–ü–æ–¥–¥–µ—Ä–∂–∫–∞üÜò")
    button_profile = types.KeyboardButton("/–ü—Ä–æ—Ñ–∏–ª—åüë§")
    button_rules = types.KeyboardButton("/–ü—Ä–∞–≤–∏–ª–∞üìñ")
    return keyboard.add(
        button_profile, button_catalog, button_support, button_rules, row_width=2
    )


def catalog_keyboard() -> types.InlineKeyboardMarkup:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–æ–≤–∞—Ä.
    :return: types.InlineKeyboardMarkup
    """
    keyboard = types.InlineKeyboardMarkup()
    button_gta = types.InlineKeyboardButton("GTA V", callback_data="gta")
    button_rust = types.InlineKeyboardButton("Rust", callback_data="rust")
    button_dota = types.InlineKeyboardButton("Dota 2", callback_data="dota2")
    button_battlefield = types.InlineKeyboardButton(
        "Battlefield", callback_data="battlefield"
    )
    button_cod = types.InlineKeyboardButton("CoD", callback_data="cod")
    button_fortnite = types.InlineKeyboardButton("Fortnite", callback_data="fortnite")
    return keyboard.add(
        button_gta,
        button_rust,
        button_fortnite,
        button_cod,
        button_dota,
        button_battlefield,
        row_width=2,
    )


@bot.message_handler(commands=["start"])
def hello(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è. –í—ã–∑—ã–≤–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
    :param message: Message
    :return: None
    """
    bot.send_message(
        message.chat.id,
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω –∏–≥—Ä–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤!\n"
        "–î–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É\n–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Ç–æ–≤–∞—Ä–∞ "
        '–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å"',
        reply_markup=navigation_keyboard(),
    )


@bot.message_handler(commands=["–ö–∞—Ç–∞–ª–æ–≥üõí"])
def catalog(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—â–∞—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –∫–∞–∫–æ–π —Ç–æ–≤–∞—Ä –µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.
    :param message: Message
    :return: None
    """
    bot.send_message(
        message.chat.id,
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–≥—Ä—É:",
        reply_markup=catalog_keyboard(),
    )


@bot.message_handler(commands=["–ü—Ä–æ—Ñ–∏–ª—åüë§"])
def profile(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –≤—ã–≤–æ–¥—è—â–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ. (ID TG, @username)
    :param message: Message
    :return: None
    """
    bot.send_message(
        message.chat.id, f"ID: {message.from_user.id} | @{message.chat.username}"
    )


@bot.message_handler(commands=["–ü–æ–¥–¥–µ—Ä–∂–∫–∞üÜò"])
def support(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—è —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø—Ä–æ—Å—å–±–æ–π –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É
    :param message: Message
    :return: None
    """
    bot.send_message(message.chat.id, "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ: ")
    bot.register_next_step_handler(message, support_order)


def support_order(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, —Å–æ—Ö—Ä–∞–Ω—è—é—â–∞—è –æ–ø–∏—Å–∞–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø—Ä–æ–±–ª–µ–º—É –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª.
    –ü–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–±–ª–µ–º—ã –≤ –ë–î –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–ø–∏—Å–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
    :param message: Message
    :return: None
    """
    with open("support_order.txt", "a", encoding="UTF-8") as sup:
        sup.write(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.chat.username}\n–ü—Ä–æ–±–ª–µ–º–∞: {message.text}\n")
    bot.send_message(
        message.chat.id,
        "–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–æ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.",
        reply_markup=navigation_keyboard(),
    )


@bot.message_handler(commands=["–ü—Ä–∞–≤–∏–ª–∞üìñ"])
def rules(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∞–≤–∏–ª–∞ –º–∞–≥–∞–∑–∏–Ω–∞.
    :param message: Message
    :return: None
    """
    bot.send_message(
        message.chat.id,
        "1. –í—Å–µ–≥–¥–∞ –≤–µ–¥–∏—Ç–µ –∑–∞–ø–∏—Å—å —ç–∫—Ä–∞–Ω–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ —Ç–æ–≤–∞—Ä–∞, —á—Ç–æ–±—ã —É –≤–∞—Å –±—ã–ª–∏ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞.\n"
        "2. –í —Å–ª—É—á–∞–µ –∫–∞–∫–∏—Ö-—Ç–æ –æ—à–∏–±–æ–∫ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ü–æ–¥–¥–µ—Ä–∂–∫—É.\n"
        '3. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Ç–æ–≤–∞—Ä–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å:"\n',
        reply_markup=navigation_keyboard(),
    )


@bot.callback_query_handler(func=lambda call: True)
def handle(call: CallbackQuery) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—è –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ + —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã.
    –ó–¥–µ—Å—å –∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã —Ç–æ–≤–∞—Ä–∞
    :param call: CallbackQuery
    :return: None
    """

    def keyboard_for_pay() -> types.InlineKeyboardMarkup:
        """
        –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã —Ç–æ–≤–∞—Ä–∞.
        :return: types.InlineKeyboardMarkup
        """
        message_id = call.message.id
        pay_keyboard = types.InlineKeyboardMarkup()
        if call.data == "gta":
            button_pay = types.InlineKeyboardButton(
                "–û–ø–ª–∞—Ç–∏—Ç—å", url=user.create_gta_bill(message_id)
            )
        elif call.data == "rust":
            button_pay = types.InlineKeyboardButton(
                "–û–ø–ª–∞—Ç–∏—Ç—å", url=user.create_rust_bill(message_id)
            )
        elif call.data == "cod":
            button_pay = types.InlineKeyboardButton(
                "–û–ø–ª–∞—Ç–∏—Ç—å", url=user.create_cod_bill(message_id)
            )
        elif call.data == "dota":
            button_pay = types.InlineKeyboardButton(
                "–û–ø–ª–∞—Ç–∏—Ç—å", url=user.create_dota_bill(message_id)
            )
        elif call.data == "battlefield":
            button_pay = types.InlineKeyboardButton(
                "–û–ø–ª–∞—Ç–∏—Ç—å", url=user.create_battlefield_bill(message_id)
            )
        elif call.data == "fortnite":
            button_pay = types.InlineKeyboardButton(
                "–û–ø–ª–∞—Ç–∏—Ç—å", url=user.create_fortnite_bill(message_id)
            )
        button_check_pay = types.InlineKeyboardButton(
            "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", callback_data="check_pay"
        )
        return pay_keyboard.add(button_pay, button_check_pay)

    if call.data == "gta":
        bot.send_photo(
            call.message.chat.id,
            photo="https://xage.ru/media/uploads/2018/04/gtav.jpg",
            caption="GTA V | "
            "249 "
            "RUB\n–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Steam|Social Club\n–î–ª—è –æ–ø–ª–∞—Ç—ã —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. "
            "–£ –≤–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –Ω–æ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç",
            reply_markup=keyboard_for_pay(),
        )
        game[call.message.from_user.id] = "gta"
    elif call.data == "rust":
        bot.send_photo(
            call.message.chat.id,
            photo="https://pic.rutubelist.ru/video/48/a0/48a0ebdfc8a24d5890464bafabe79812.jpg",
            caption="RUST | "
            "199 "
            "RUB\n–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Steam\n–î–ª—è –æ–ø–ª–∞—Ç—ã —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. "
            "–£ –≤–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –Ω–æ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç",
            reply_markup=keyboard_for_pay(),
        )
        game[call.message.from_user.id] = "rust"
    elif call.data == "battlefield":
        bot.send_photo(
            call.message.chat.id,
            photo="http://keyplace.ru/wp-content/uploads/2019/10/bfv_theme.jpg",
            caption="BATTLEFIELD | "
            "699 "
            "RUB\n–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Origin\n–î–ª—è –æ–ø–ª–∞—Ç—ã —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. "
            "–£ –≤–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –Ω–æ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç",
            reply_markup=keyboard_for_pay(),
        )
        game[call.message.from_user.id] = "battlefield"
    elif call.data == "cod":
        bot.send_photo(
            call.message.chat.id,
            photo="https://gamebomb.ru/files/galleries/001/4/45/385757.jpg",
            caption="CoD Vanguard | "
            "699 "
            "RUB\n–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Battle.net\n–î–ª—è –æ–ø–ª–∞—Ç—ã —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. "
            "–£ –≤–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –Ω–æ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç",
            reply_markup=keyboard_for_pay(),
        )
        game[call.message.from_user.id] = "cod"
    elif call.data == "dota":
        bot.send_photo(
            call.message.chat.id,
            photo="https://i.postimg.cc/2y42Znym/V.png",
            caption="Dota 2 7000 PTS | "
            "3299 "
            "RUB\n–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Steam\n–î–ª—è –æ–ø–ª–∞—Ç—ã —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. "
            "–£ –≤–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –Ω–æ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç",
            reply_markup=keyboard_for_pay(),
        )
        game[call.message.from_user.id] = "dota"
    elif call.data == "fortnite":
        bot.send_photo(
            call.message.chat.id,
            photo="https://media.discordapp.net/attachments/571294092341018664/571425151338676224/unknown.png?width"
            "=1202&height=677",
            caption="Fortnite 200+ Skins | "
            "1799 "
            "RUB\n–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Epic Games\n–î–ª—è –æ–ø–ª–∞—Ç—ã —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. "
            "–£ –≤–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –Ω–æ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç",
            reply_markup=keyboard_for_pay(),
        )
        game[call.message.from_user.id] = "fortnite"
    elif call.data == "check_pay":
        user_id = call.message.from_user.id
        chat_id = call.message.chat.id
        message_id = call.message.id
        if user.check_pay(message_id):
            bot.send_message(call.message.chat.id, f"–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞.")
            give_out(chat_id, game[user_id])
            del game[user_id]
        else:
            bot.send_message(call.message.chat.id, f"–ü–æ–∫–∞ —á—Ç–æ –æ–ø–ª–∞—Ç—ã –Ω–µ –ø–æ—Å—Ç—É–ø–∞–ª–æ.")
