import telebot
from telebot import types
from config import TOKEN
from qiwi import GenerateBill
bot = telebot.TeleBot(TOKEN)
user = GenerateBill()
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –≤—Å–µ —Å–ª—É—á–∞–∏ –∂–∏–∑–Ω–∏
def navigation_keyboard():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_catalog = types.KeyboardButton("/–ö–∞—Ç–∞–ª–æ–≥üõí")
    button_support = types.KeyboardButton("/–ü–æ–¥–¥–µ—Ä–∂–∫–∞üÜò")
    button_profile = types.KeyboardButton("/–ü—Ä–æ—Ñ–∏–ª—åüë§")
    button_rules = types.KeyboardButton("/–ü—Ä–∞–≤–∏–ª–∞üìñ")
    return keyboard.add(
        button_profile, button_catalog, button_support, button_rules, row_width=2
    )


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞ (–≤—Å—è–∫–∏–µ –∏–≥—Ä—É—à–∫–∏)
def catalog_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    button_gta = types.InlineKeyboardButton("GTA V", callback_data="gta")
    button_rust = types.InlineKeyboardButton("Rust", callback_data="rust")
    button_dota = types.InlineKeyboardButton("Dota 2", callback_data="dota2")
    button_battlefield = types.InlineKeyboardButton(
        "Battlefield", callback_data="battlefield"
    )
    button_cod = types.InlineKeyboardButton("CoD", callback_data="cod")
    button_fortnite = types.InlineKeyboardButton("Fortnite", callback_data="fortnite")
    return keyboard.add(
        button_gta,
        button_rust,
        button_fortnite,
        button_cod,
        button_dota,
        button_battlefield,
        row_width=2,
    )


@bot.message_handler(commands=["start"])
def hello(message):
    bot.send_message(
        message.chat.id,
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω –∏–≥—Ä–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤!\n"
        "–î–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É",
        reply_markup=navigation_keyboard(),
    )


# –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ "–ö–∞—Ç–∞–ª–æ–≥"
@bot.message_handler(commands=["–ö–∞—Ç–∞–ª–æ–≥üõí"])
def catalog(message):
    bot.send_message(
        message.chat.id,
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–≥—Ä—É:",
        reply_markup=catalog_keyboard(),
    )


# –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ "–ü—Ä–æ—Ñ–∏–ª—å"
@bot.message_handler(commands=["–ü—Ä–æ—Ñ–∏–ª—åüë§"])
def profile(message):
    bot.send_message(
        message.chat.id, f"ID: {message.from_user.id} | @{message.chat.username}"
    )


# –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ "–ü–æ–¥–¥–µ—Ä–∂–∫–∞"
@bot.message_handler(commands=["–ü–æ–¥–¥–µ—Ä–∂–∫–∞üÜò"])
def support(message):
    bot.send_message(message.chat.id, "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ: ")
    bot.register_next_step_handler(message, support_order)


def support_order(message):
    with open("support_order.txt", "a", encoding="UTF-8") as sup:
        sup.write(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.chat.username}\n–ü—Ä–æ–±–ª–µ–º–∞: {message.text}\n")
    bot.send_message(
        message.chat.id,
        "–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–æ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.",
        reply_markup=navigation_keyboard(),
    )


# –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ "–ü—Ä–∞–≤–∏–ª–∞"
@bot.message_handler(commands=["–ü—Ä–∞–≤–∏–ª–∞üìñ"])
def rules(message):
    bot.send_message(
        message.chat.id,
        "1. –í—Å–µ–≥–¥–∞ –≤–µ–¥–∏—Ç–µ –∑–∞–ø–∏—Å—å —ç–∫—Ä–∞–Ω–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ —Ç–æ–≤–∞—Ä–∞, —á—Ç–æ–±—ã —É –≤–∞—Å –±—ã–ª–∏ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞.\n"
        "2.–ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ –∑–¥–µ—Å—å –µ—â–µ –≤—Å—è–∫–∏–µ –ø—É–Ω–∫—Ç–∏–∫–∏ –ø—Ä–∞–≤–∏–ª\n"
        "3.–ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ –∑–¥–µ—Å—å –µ—â–µ –≤—Å—è–∫–∏–µ –ø—É–Ω–∫—Ç–∏–∫–∏ –ø—Ä–∞–≤–∏–ª\n"
        "4.–ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ –∑–¥–µ—Å—å –µ—â–µ –≤—Å—è–∫–∏–µ –ø—É–Ω–∫—Ç–∏–∫–∏ –ø—Ä–∞–≤–∏–ª\n"
        "5.–ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ –∑–¥–µ—Å—å –µ—â–µ –≤—Å—è–∫–∏–µ –ø—É–Ω–∫—Ç–∏–∫–∏ –ø—Ä–∞–≤–∏–ª\n",
        reply_markup=navigation_keyboard(),
    )


@bot.callback_query_handler(func=lambda call: True)
def handle(call):
    if call.data == "gta":
        bill_keyboard = types.InlineKeyboardMarkup()
        button_pay = types.InlineKeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å", url=user.create_gta_bill())
        button_check_pay = types.InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", callback_data="check_pay")
        bill_keyboard.add(button_pay, button_check_pay)
        bot.send_photo(
            call.message.chat.id,
            photo="https://xage.ru/media/uploads/2018/04/gtav.jpg",
            caption="GTA V | "
            "249 "
            "RUB\n–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Steam\n–î–ª—è –æ–ø–ª–∞—Ç—ã —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. "
                    "–£ –≤–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –Ω–æ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç",
            reply_markup=bill_keyboard
        )
    if call.data == "rust":

    elif call.data == "check_pay":
        user.check_gta_bill()
        if user.check_gta_bill() == "PAID":
            ###TODO
        else:
            print("–û–ø–ª–∞—Ç–∞ –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞")

print("–ó–∞–ø—É—â–µ–Ω–æ")
bot.infinity_polling()
